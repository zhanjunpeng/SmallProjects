#!/usr/bin/env python
# coding: utf-8

# In[65]:


import numpy as np
from sklearn.linear_model import LinearRegression
X = np.array([[2.13686, 2.54606], [2.09642, 2.3666], [2.1493, 2.24456], [2.19596, 2.20266], [2.22706, 2.29433], [2.23639, 2.34015], [2.35459, 2.24495], [2.479, 2.08488], [2.479, 2.23756], [2.51944, 2.26817], [2.479, 2.37114], [2.51944, 2.40939], [2.5381, 2.50484], [2.63764, 2.40961], [2.71229, 2.38304], [2.81804, 2.39851], [2.73717, 2.83728], [2.78072, 2.90607], [2.82115, 3.00538], [3.21617, 3.00614], [3.15086, 3.19304], [3.41213, 3.18208], [3.41213, 3.01796], [3.29705, 3.29637], [3.27527, 3.32686], [3.27527, 3.26579], [3.44635, 3.40352], [3.46812, 3.4341], [3.48056, 3.36924], [3.50544, 3.3731], [3.50855, 3.32349], [3.52722, 3.28536], [3.54899, 3.37319], [3.62986, 3.27792], [3.67341, 3.39251], [3.65785, 3.49553], [3.60187, 3.53359], [3.75117, 3.50334], [3.80093, 3.61031], [3.92846, 3.58002], [3.86936, 3.65242], [3.9098, 3.64105], [3.90358, 3.69829], [3.93779, 3.71744], [3.99, 3.75193], [3.79471, 3.85075], [3.71073, 3.73609], [3.76983, 3.65223], [3.67341, 3.60243], [3.58009, 3.6366], [3.53655, 3.64034], [3.45257, 3.71651], [3.49611, 3.59446], [3.51788, 3.56015], [3.521, 3.53344], [3.48056, 3.56771], [3.47434, 3.51045], [3.43701, 3.51419], [3.4028, 3.47978], [3.40591, 3.43398], [3.42457, 3.41493], [3.32193, 3.41474], [3.31882, 3.37275], [3.29082, 3.41468], [3.28771, 3.46429], [3.32504, 3.55978], [3.27216, 3.49098], [3.23173, 3.48327], [3.20684, 3.46414], [3.18196, 3.46409], [3.1944, 3.41068], [3.22551, 3.39547], [3.16952, 3.37246], [3.15708, 3.39534], [3.12286, 3.33802], [3.12286, 3.36856], [3.12908, 3.44109], [3.10109, 3.35325], [3.07621, 3.26923], [3.18196, 3.25798], [3.12597, 3.25787], [3.11042, 3.26166], [3.00156, 3.26527], [2.98289, 3.3034], [2.91757, 3.29946], [2.88958, 3.29559], [2.79316, 3.39464], [2.91446, 3.47121], [2.6563, 3.27224], [2.78383, 3.20379], [2.91135, 3.17349], [2.83981, 3.03977], [2.70607, 3.196], [2.69673, 3.16545], [2.67496, 3.06999], [2.65319, 3.06613], [2.60342, 3.14237], [2.58787, 3.21105], [2.46967, 3.27189], [2.40747, 3.18398], [2.41058, 3.05422], [2.31104, 2.99678], [2.24883, 3.19131], [2.08087, 3.41237], [2.03733, 2.73671], [2.21462, 2.76377]])
x = X[:,0]
y = X[:,1]
x = np.reshape(x,(x.size,1))
y = np.reshape(y,(y.size,1))
#print(X.size)
#print(x.size)
#print(y.size)
#print(x)
import matplotlib.pyplot as plt
fig = plt.figure(1)
plt.plot(X[:,0], X[:,1], '.k', label='legend')
plt.xlabel('High School GPA')
plt.ylabel('University GPA')
plt.show()


# In[66]:


reg = LinearRegression().fit(x, y)


# In[67]:


reg.score(x, y)


# In[68]:


coef1 = reg.coef_[0,0]
print(coef1)


# In[69]:


intercept1 = reg.intercept_[0] 
print(intercept1)


# In[ ]:





# In[72]:


xline = np.linspace(1.9, 4.0, num=100)
yline = [coef1*i+intercept1 for i in xline]
plt.plot(X[:,0], X[:,1], '.k', label='Real data')
plt.xlabel('High School GPA')
plt.ylabel('University GPA')
#hold on
plt.plot(xline, yline, 'r', label='Regression')
plt.legend()
plt.show()


# In[76]:


plt.plot(X[:,0], X[:,1], '.k', label='Real data')
plt.xlabel('High School GPA')
plt.ylabel('University GPA')
plt.plot(xline, yline, 'r', label='Regression')

xpred = 3
ypred = reg.predict(np.array([[xpred]]))[0,0]
print(ypred)
plt.plot(xpred, ypred, '^b', label='Prediction')

plt.legend()
plt.show()


# In[ ]:




